
generator client {
    provider = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    extensions = [vector]
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}
model user {
    id  String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    imageUrl String?
    firstName String?
    lastName String?
    email String? @unique
    credits Int @default(150)
    userToProject userToProject[]
}

model Project {
    id        String   @id @default(cuid())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

   githubUrl String?
   deletedAt DateTime?

    userToProject userToProject[]
    commits Commit[]

   SourceCodeEmbedding SourceCodeEmbedding[]
}

model userToProject{
    id String  @id @default(cuid())
    userId String
    projectId String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user user @relation(fields: [userId], references: [id])
    project Project @relation(fields: [projectId], references: [id])
    @@unique([userId, projectId])
}
model Commit{
    id String @id @default(cuid())
   
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    projectId String
    project Project @relation(fields: [projectId], references: [id])
    commitMessage String
    commitHash String @unique
    commitAuthorName String
    commitAuthorAvatar String
    commitDate DateTime
    summary String
}
model SourceCodeEmbedding{
    id String @id @default(cuid())
    summaryEmbedding Unsupported("vector(768)")?
    sourceCode String
    fileName String
    summary String

    projectId String
    project Project @relation(fields: [projectId], references: [id])
}


